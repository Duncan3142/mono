version: '3.8'

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data:
  tempo_data:
  loki_data:
  grafana_data:

services:
  mono-devcon:
    # Build from the Dockerfile and tag the resulting image
    build:
      context: ./devcontainer/
      dockerfile: Dockerfile
    image: mono-devcon:latest

    # Keep the container running indefinitely
    command: sleep infinity

    # Mount the project folder and the rootless Docker socket
    volumes:
      - ..:/workspace
      - ${XDG_RUNTIME_DIR}/docker.sock:/var/run/docker.sock

    # Load variables from the specified .env file
    env_file:
      - ./devcontainer/.env
    networks:
      - monitoring

  # ------------------- #
  #   The Collector     #
  # ------------------- #
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    restart: unless-stopped
    command: ["--config=/etc/otelcol-contrib/config.yml"]
    volumes:
      - ./otel-collector/config.yml:/etc/otelcol-contrib/config.yml
    networks:
      - monitoring
    depends_on:
      - tempo
      - loki

  # ------------------- #
  #      Data Sources   #
  # ------------------- #
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus/config.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090" # Prometheus UI
    networks:
      - monitoring

  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    restart: unless-stopped
    command: ["-config.file=/etc/tempo/config.yml"]
    user: "root"
    volumes:
      - ./tempo/config.yml:/etc/tempo/config.yml
      - tempo_data:/tmp/tempo
    ports:
      - "3200:3200" # Tempo UI
    networks:
      - monitoring

  loki:
    image: grafana/loki:latest
    container_name: loki
    restart: unless-stopped
    command: ["-config.file=/etc/loki/config.yml"]
    user: "root"
    volumes:
      - ./loki/config.yml:/etc/loki/config.yml
      - loki_data:/tmp/loki
    networks:
      - monitoring

  # ------------------- #
  #    Visualization    #
  # ------------------- #
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    volumes:
      - ./grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    networks:
      - monitoring
    depends_on:
      - prometheus
      - tempo
      - loki
