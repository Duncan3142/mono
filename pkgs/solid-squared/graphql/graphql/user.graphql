"""
User edge
"""
type UserGameEdge {
	node: Game!
	topScore: Int
	cursor: String!
}

"""
User connection
"""
type UserGameConnection {
	edges: [UserGameEdge!]!
	pageInfo: PageInfo!
}

"""
User field name
"""
enum UserGameFieldName {
	NAME
	TOP_SCORE
}

"""
User order
"""
input UserGameOrder {
	field: UserGameFieldName!
	direction: OrderDirection!
}

"""
User field
"""
input UserGameFieldValue @oneOf {
	name: String
	topScore: Int
}

"""
User filter
"""
input UserGameFilter {
	field: UserGameFieldValue!
	operator: ComparisonOperator!
}

"""
User node
"""
type User implements Node {
	urn: URN!
	name: String!
	email: String!
	games(
		cursor: CursorInput
		order: [UserGameOrder!]
		filter: [UserGameFilter!]
	): UserGameConnection!
}

"""
User edge
"""
type UserEdge {
	node: User!
	cursor: String!
}

"""
User connection
"""
type UserConnection {
	edges: [UserEdge!]!
	pageInfo: PageInfo!
}

"""
User field name
"""
enum UserFieldName {
	NAME
	EMAIL
}

"""
User order
"""
input UserOrder {
	field: UserFieldName!
	direction: OrderDirection!
}

"""
User field
"""
input UserFieldValue @oneOf {
	name: String
	email: String
}

"""
User filter
"""
input UserFilter {
	field: UserFieldValue!
	operator: ComparisonOperator!
}

"""
User queries
"""
type Query {
	"""
	Current user
	"""
	self: User!

	"""
	Get a user by URN
	"""
	user(urn: URN!): User!

	"""
	Get users
	"""
	users(cursor: CursorInput, order: [UserOrder!], filter: [UserFilter!]): UserConnection!
}
