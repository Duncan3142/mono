"""
User node
"""
type User implements Node {
	urn: URN!
	name: String!
	email: String!
}

"""
User edge
"""
type UserEdge {
	node: User!
	cursor: String!
}

"""
User connection
"""
type UserConnection {
	edges: [UserEdge!]!
	pageInfo: PageInfo!
}

"""
User order
"""
input UserSortOrderInput @oneOf {
	name: SortOrder
	email: SortOrder
}

"""
User field
"""
input UserFilterLeafInput @oneOf {
	name: StringComparisonInput
	email: StringComparisonInput
}

"""
User filter
"""
input UserFilterInput @oneOf {
	and: [UserFilterInput!]
	or: [UserFilterInput!]
	leaf: UserFilterLeafInput
}

extend type Query {
	"""
	Current user
	"""
	self: User!

	"""
	Get a user by URN
	"""
	user(urn: URN!): User!

	"""
	Get users
	"""
	users(
		cursor: CursorInput
		order: [UserSortOrderInput!]
		filter: [UserFilterInput!]
	): UserConnection!
}
